---
apiVersion: v1
kind: Namespace
metadata:
  name: reviews
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reviews-code
  namespace: reviews
data:
  package.json: |
    {
      "name": "reviews-service",
      "version": "1.0.0",
      "main": "server.js",
      "dependencies": {
        "express": "^4.18.2"
      }
    }
  server.js: |
    const express = require('express');
    const app = express();
    
    app.use(express.json());
    
    const reviews = {};
    
    app.get('/reviews/:productId', (req, res) => {
      const productId = req.params.productId;
      res.json(reviews[productId] || []);
    });
    
    app.post('/reviews/:productId', (req, res) => {
      const productId = req.params.productId;
      if (!reviews[productId]) reviews[productId] = [];
      reviews[productId].push({
        ...req.body,
        timestamp: new Date().toISOString()
      });
      res.status(201).json({ message: 'Review added' });
    });
    
    app.get('/health', (req, res) => res.json({ status: 'ok' }));
    
    app.listen(80, () => console.log('Reviews service on port 80'));
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews
  namespace: reviews
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
  template:
    metadata:
      labels:
        app: reviews
    spec:
      initContainers:
      - name: npm-install
        image: node:18-alpine
        command: ['sh', '-c', 'cp /config/* /app/ && cd /app && npm install']
        volumeMounts:
        - name: code-source
          mountPath: /config
        - name: code
          mountPath: /app
      containers:
      - name: reviews
        image: node:18-alpine
        command: ['node', '/app/server.js']
        ports:
        - containerPort: 80
        volumeMounts:
        - name: code
          mountPath: /app
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
      volumes:
      - name: code-source
        configMap:
          name: reviews-code
      - name: code
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: reviews
spec:
  selector:
    app: reviews
  ports:
  - port: 80
    targetPort: 80
